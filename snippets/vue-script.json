{
  "import": {
    "prefix": "import",
    "body": [
      "import { $1 } from '$2'"
    ],
    "description": "import {...} from ..."
  },
  "data": {
    "prefix": "data",
    "body": [
      "data() {",
      "\treturn {",
      "\t\t$1",
      "\t}",
      "},"
    ],
    "description": "data实例"
  },
  "setup": {
    "prefix": "setup",
    "body": [
      "setup($3,$4) {",
      "\t$0",
      "\treturn {",
      "\t\t$1",
      "\t}",
      "},"
    ],
    "description": "setup"
  },
  "defineProps": {
    "prefix": "vprops",
    "body": [
      "const props = defineProps({\t",
      "\t${0:name} : ${1:value}\t",
      "})"
    ],
    "description": "defineProps element"
  },
  "defineEmits": {
    "prefix": "vemits",
    "body": [
      "const props = defineEmits([\t",
      "\t\t\t ${0: name}\t",
      "])"
    ],
    "description": "defineEmits element"
  },
  "defineExpose": {
    "prefix": "vexpose",
    "body": [
      "defineExpose({\t",
      "\t${0:name} : ${1:value}\t",
      "})"
    ],
    "description": "defineExpose element"
  },
  "Computed": {
    "prefix": "vcomputed",
    "body": [
      "const compoted = computed(() => {",
      "\t",
      "}),"
    ],
    "description": "computed value"
  },
  "watch": {
    "prefix": "vWatch",
    "body": [
      "watch(${0: ref}, (oldValue, newValue) => {",
      "\t",
      "},"
    ],
    "description": "watch value"
  },
  "watchEffect": {
    "prefix": "vWatchEffect",
    "body": [
      "watchEffect(() => {",
      "\t",
      "},"
    ],
    "description": "watchEffect value"
  },
  "console.log": {
    "prefix": "clg",
    "body": [
      "console.log(`=======->${0}`,${0:name})"
    ],
    "description": "快速打印日志"
  }
}